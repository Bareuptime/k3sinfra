# SealedSecret for GHCR credentials
#
# To create this SealedSecret, run the following commands:
#
# 1. Create the raw secret (DO NOT commit this):
#    kubectl create secret docker-registry ghcr-credentials \
#      --docker-server=ghcr.io \
#      --docker-username=<YOUR_GITHUB_USERNAME> \
#      --docker-password=<YOUR_GITHUB_TOKEN> \
#      --namespace=bareuptime-backend \
#      --dry-run=client -o yaml > /tmp/ghcr-secret.yaml
#
# 2. Seal the secret using kubeseal:
#    kubeseal --format=yaml \
#      --controller-namespace=kube-system \
#      --controller-name=sealed-secrets \
#      < /tmp/ghcr-secret.yaml \
#      > apps/bareuptime-backend/sealed-secret-ghcr.yaml
#
# 3. Delete the temporary file:
#    rm /tmp/ghcr-secret.yaml
#
# 4. Commit the sealed-secret-ghcr.yaml file to git
#
# The SealedSecret will look like this (encrypted):
---
# apiVersion: bitnami.com/v1alpha1
# kind: SealedSecret
# metadata:
#   name: ghcr-credentials
#   namespace: bareuptime-backend
# spec:
#   encryptedData:
#     .dockerconfigjson: AgA... (long encrypted string)
#   template:
#     type: kubernetes.io/dockerconfigjson
#     metadata:
#       name: ghcr-credentials
#       namespace: bareuptime-backend

# TEMPORARY: For immediate deployment, create a regular secret manually:
# This should be replaced with a SealedSecret in production
#
# kubectl create secret docker-registry ghcr-credentials \
#   --docker-server=ghcr.io \
#   --docker-username=<YOUR_GITHUB_USERNAME> \
#   --docker-password=<YOUR_GITHUB_TOKEN> \
#   --namespace=bareuptime-backend
