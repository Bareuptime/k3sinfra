apiVersion: apps/v1
kind: Deployment
metadata:
  name: bareuptime-backend
  namespace: bareuptime-backend
  labels:
    app: bareuptime-backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: bareuptime-backend
  template:
    metadata:
      labels:
        app: bareuptime-backend
    spec:
      serviceAccountName: bareuptime-backend

      # Image pull secret for GHCR
      imagePullSecrets:
        - name: ghcr-credentials

      # Init container to wait for database
      initContainers:
        - name: wait-for-database
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo 'Waiting for database...'
              until nc -z 10.10.85.1 5432; do
                echo 'Waiting for database connection...';
                sleep 2;
              done
              echo 'Database is ready'
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 50m
              memory: 32Mi

      containers:
        - name: backend
          image: ghcr.io/bareuptime/backend:latest
          imagePullPolicy: Always

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          # Environment variables from secrets
          envFrom:
            # Database
            - secretRef:
                name: database-credentials

            # Redis
            - secretRef:
                name: redis-credentials

            # GitHub/Auth
            - secretRef:
                name: github-credentials

            # Application config
            - secretRef:
                name: app-config

            # ClickHouse
            - secretRef:
                name: clickhouse-credentials

          # Additional environment variables
          env:
            # Port configuration
            - name: PORT
              value: "8080"

            # Performance settings
            - name: GOMAXPROCS
              value: "2"
            - name: GOGC
              value: "100"
            - name: GOMEMLIMIT
              value: "450MiB"

            # Region
            - name: REGION
              value: "falkenstein"
            - name: REGION_TAG
              value: "region=falkenstein"

            # Logging
            - name: LOG_FORMAT
              value: "json"

            # Redis Sentinel configuration
            - name: REDIS_MASTER_NAME
              value: "mymaster"
            - name: REDIS_SENTINELS
              value: "redis-sentinel.common.svc.cluster.local:26379"

            # ClickHouse URLs
            - name: CLICKHOUSE_URLS
              value: "10.10.85.1:9000,10.10.85.5:9000"

            # FCM credentials path
            - name: FCM_CREDENTIALS_PATH
              value: "/secrets/google-service-account.json"

          # Volume mounts
          volumeMounts:
            # Persistent storage
            - name: backend-storage
              mountPath: /opt/bareuptime

            # Google service account JSON
            - name: google-service-account
              mountPath: /secrets
              readOnly: true

          # Health checks
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3

          # Resource limits
          resources:
            requests:
              cpu: 150m
              memory: 365Mi
            limits:
              cpu: 500m
              memory: 512Mi

      # Volumes
      volumes:
        # Persistent storage
        - name: backend-storage
          persistentVolumeClaim:
            claimName: backend-storage

        # Google service account from secret
        - name: google-service-account
          secret:
            secretName: google-service-account
            items:
              - key: google-service-account.json
                path: google-service-account.json

      # Anti-affinity to spread across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: bareuptime-backend
                topologyKey: kubernetes.io/hostname
